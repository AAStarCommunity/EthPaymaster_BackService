package model

import (
	"AAStarCommunity/EthPaymaster_BackService/common/user_op"
	"encoding/hex"
	"math/big"
)

var (
	MockSimulateHandleOpResult = &SimulateHandleOpResult{
		PreOpGas:      big.NewInt(374992),
		GasPaid:       big.NewInt(595492500000000),
		ValidAfter:    big.NewInt(1710044496),
		ValidUntil:    big.NewInt(1820044496),
		TargetSuccess: false,
		TargetResult:  nil,
	}
)

func init() {
	callDatStr := "0xd6383f940000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000ffdb071c2b58ccc10ad386f9bb4e8d3d664ce73c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000054fa000000000000000000000000000000000000000000000000000000000005fa35000000000000000000000000000000000000000000000000000000000000ae64000000000000000000000000000000000000000000000000000000005968606e0000000000000000000000000000000000000000000000000000000059682f000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000589406cc6185a346906296840746125a0e449764545fbfb9cf000000000000000000000000b6bcf9517d193f551d0e3d6860103972dd13de7b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4b61d27f60000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044095ea7b30000000000000000000000000000000000325602a77416a16136fdafd04b299fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d5f2147ca7f18e8014b76e1a98baffc96ebb90a29f000000000000000000000000000000000000000000000000000000006c7bacd00000000000000000000000000000000000000000000000000000000065ed355000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b5912d105cd6fcaed224191994d34ebbb68eec23ae9a431782b465cba3b0da3751fbbf9603de6ea56b42f1d5952a22d9826d71238165c3c75512952f016279de1b00000000000000000000000000000000000000000000000000000000000000000000000000000000000041aa846693598194980f3bf50486be854704534c1622d0c2ee895a5a1ebe1508221909a27cc7971d9f522c8df13b9d8a6ee446d09ea7635f31c59d77d35d1281421c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
	callDataByte, err := hex.DecodeString(callDatStr[2:])
	if err != nil {
		panic(err)
	}
	MockSimulateHandleOpResult.SimulateUserOpCallData = callDataByte
}

type TotalGasDetail struct {
	MaxTxGasLimit       *big.Int
	MaxTxGasCostGwei    *big.Float
	MaxTxGasCostInEther *big.Float
	GasPriceGwei        *big.Float
}

type GasPrice struct {
	MaxFeePerGas *big.Int `json:"max_base_price_wei"`
	//MaxBasePriceGwei      float64    `json:"max_base_price_gwei"`
	//MaxBasePriceEther     *big.Float `json:"max_base_price_ether"`
	MaxPriorityFeePerGas *big.Int `json:"max_priority_price_wei"`
	//MaxPriorityPriceGwei  float64    `json:"max_priority_price_gwei"`
	//MaxPriorityPriceEther *big.Float `json:"max_priority_price_ether"`
	BaseFee *big.Int `json:"base_fee"`
}
type SimulateHandleOpResult struct {
	// PreOpGas = preGas - gasleft() + userOp.preVerificationGas;
	// PreOpGas = verificationGasLimit + userOp.preVerificationGas;
	PreOpGas               *big.Int `json:"preOpGas"`
	GasPaid                *big.Int `json:"paid"`
	ValidAfter             *big.Int `json:"validAfter"`
	ValidUntil             *big.Int `json:"validUntil"`
	TargetSuccess          bool
	TargetResult           []byte
	SimulateGasPrice       *big.Int
	SimulateUserOpCallData []byte
}

type GasFeePerGasResult struct {
	MaxFeePerGas         *big.Int
	MaxPriorityFeePerGas *big.Int
	BaseFee              *big.Int
}
type PreVerificationGasEstimateInput struct {
	Strategy         *Strategy
	Op               *user_op.UserOpInput
	SimulateOpResult *SimulateHandleOpResult
	GasFeeResult     *GasPrice
}
